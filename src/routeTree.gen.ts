/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from "@tanstack/react-router"

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as IndexImport } from "./routes/index"
import { Route as DashboardDashboardLayoutImport } from "./routes/dashboard/_dashboard-layout"
import { Route as AuthAuthAlyoutImport } from "./routes/auth/_auth-alyout"
import { Route as DashboardDashboardLayoutIndexImport } from "./routes/dashboard/_dashboard-layout/index"
import { Route as AuthAuthLayoutLoginImport } from "./routes/auth/_auth-layout/login"

// Create Virtual Routes

const DashboardImport = createFileRoute("/dashboard")()
const AuthImport = createFileRoute("/auth")()

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: "/dashboard",
  path: "/dashboard",
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: "/auth",
  path: "/auth",
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any)

const DashboardDashboardLayoutRoute = DashboardDashboardLayoutImport.update({
  id: "/_dashboard-layout",
  getParentRoute: () => DashboardRoute,
} as any)

const AuthAuthAlyoutRoute = AuthAuthAlyoutImport.update({
  id: "/_auth-alyout",
  getParentRoute: () => AuthRoute,
} as any)

const DashboardDashboardLayoutIndexRoute =
  DashboardDashboardLayoutIndexImport.update({
    id: "/",
    path: "/",
    getParentRoute: () => DashboardDashboardLayoutRoute,
  } as any)

const AuthAuthLayoutLoginRoute = AuthAuthLayoutLoginImport.update({
  id: "/_auth-layout/login",
  path: "/login",
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    "/auth": {
      id: "/auth"
      path: "/auth"
      fullPath: "/auth"
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    "/auth/_auth-alyout": {
      id: "/auth/_auth-alyout"
      path: "/auth"
      fullPath: "/auth"
      preLoaderRoute: typeof AuthAuthAlyoutImport
      parentRoute: typeof AuthRoute
    }
    "/dashboard": {
      id: "/dashboard"
      path: "/dashboard"
      fullPath: "/dashboard"
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    "/dashboard/_dashboard-layout": {
      id: "/dashboard/_dashboard-layout"
      path: "/dashboard"
      fullPath: "/dashboard"
      preLoaderRoute: typeof DashboardDashboardLayoutImport
      parentRoute: typeof DashboardRoute
    }
    "/auth/_auth-layout/login": {
      id: "/auth/_auth-layout/login"
      path: "/login"
      fullPath: "/auth/login"
      preLoaderRoute: typeof AuthAuthLayoutLoginImport
      parentRoute: typeof AuthImport
    }
    "/dashboard/_dashboard-layout/": {
      id: "/dashboard/_dashboard-layout/"
      path: "/"
      fullPath: "/dashboard/"
      preLoaderRoute: typeof DashboardDashboardLayoutIndexImport
      parentRoute: typeof DashboardDashboardLayoutImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthAuthAlyoutRoute: typeof AuthAuthAlyoutRoute
  AuthAuthLayoutLoginRoute: typeof AuthAuthLayoutLoginRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthAlyoutRoute: AuthAuthAlyoutRoute,
  AuthAuthLayoutLoginRoute: AuthAuthLayoutLoginRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface DashboardDashboardLayoutRouteChildren {
  DashboardDashboardLayoutIndexRoute: typeof DashboardDashboardLayoutIndexRoute
}

const DashboardDashboardLayoutRouteChildren: DashboardDashboardLayoutRouteChildren =
  {
    DashboardDashboardLayoutIndexRoute: DashboardDashboardLayoutIndexRoute,
  }

const DashboardDashboardLayoutRouteWithChildren =
  DashboardDashboardLayoutRoute._addFileChildren(
    DashboardDashboardLayoutRouteChildren,
  )

interface DashboardRouteChildren {
  DashboardDashboardLayoutRoute: typeof DashboardDashboardLayoutRouteWithChildren
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardDashboardLayoutRoute: DashboardDashboardLayoutRouteWithChildren,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute
  "/auth": typeof AuthAuthAlyoutRoute
  "/dashboard": typeof DashboardDashboardLayoutRouteWithChildren
  "/auth/login": typeof AuthAuthLayoutLoginRoute
  "/dashboard/": typeof DashboardDashboardLayoutIndexRoute
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute
  "/auth": typeof AuthAuthAlyoutRoute
  "/dashboard": typeof DashboardDashboardLayoutIndexRoute
  "/auth/login": typeof AuthAuthLayoutLoginRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  "/": typeof IndexRoute
  "/auth": typeof AuthRouteWithChildren
  "/auth/_auth-alyout": typeof AuthAuthAlyoutRoute
  "/dashboard": typeof DashboardRouteWithChildren
  "/dashboard/_dashboard-layout": typeof DashboardDashboardLayoutRouteWithChildren
  "/auth/_auth-layout/login": typeof AuthAuthLayoutLoginRoute
  "/dashboard/_dashboard-layout/": typeof DashboardDashboardLayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: "/" | "/auth" | "/dashboard" | "/auth/login" | "/dashboard/"
  fileRoutesByTo: FileRoutesByTo
  to: "/" | "/auth" | "/dashboard" | "/auth/login"
  id:
    | "__root__"
    | "/"
    | "/auth"
    | "/auth/_auth-alyout"
    | "/dashboard"
    | "/dashboard/_dashboard-layout"
    | "/auth/_auth-layout/login"
    | "/dashboard/_dashboard-layout/"
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/dashboard"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth": {
      "filePath": "auth",
      "children": [
        "/auth/_auth-alyout",
        "/auth/_auth-layout/login"
      ]
    },
    "/auth/_auth-alyout": {
      "filePath": "auth/_auth-alyout.tsx",
      "parent": "/auth"
    },
    "/dashboard": {
      "filePath": "dashboard",
      "children": [
        "/dashboard/_dashboard-layout"
      ]
    },
    "/dashboard/_dashboard-layout": {
      "filePath": "dashboard/_dashboard-layout.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/_dashboard-layout/"
      ]
    },
    "/auth/_auth-layout/login": {
      "filePath": "auth/_auth-layout/login.tsx",
      "parent": "/auth"
    },
    "/dashboard/_dashboard-layout/": {
      "filePath": "dashboard/_dashboard-layout/index.tsx",
      "parent": "/dashboard/_dashboard-layout"
    }
  }
}
ROUTE_MANIFEST_END */
